Conversation with Jacob Silterra.

- Load a 'personal' genome to IGV
http://www.broadinstitute.org/software/igv/LoadGenome - Loading a genome section

- Load a 'personal' GTF to IGV (First transform GTF to personal genome coordinates)
http://www.broadinstitute.org/software/igv/LoadGenome - Creating a .genome section

- Load 'variants' (First transform VCF to personal genome coordinates)

- Load 'avg' coverage per 'variant' in IGV
http://www.broadinstitute.org/software/igv/node/269
http://genome.ucsc.edu/FAQ/FAQformat.html#format13

- Produce snapshots of such loaded files automatically in IGV (reduce introns sizes when producing the snapshots)
http://www.broadinstitute.org/software/igv/batch
For exome-only view:
http://www.broadinstitute.org/software/igv/download_snapshot


Required Files for IGV:

- igviz scripts located at https://github.com/dfernan/de: igviz/
- (customized GTF) Get a custom gtf, sort and index it.
  E.g., /seq/epiprod/de/refdata/mm10/kg.ensembl.retro.fnRDB.gtf
  Then sort it and index it with IGVTools
  E.g., python igviz/igvtools_sort_index_wrapper.py -i /seq/epiprod/de/refdata/mm10/kg.ensembl.retro.fnRDB.gtf -x -s /seq/epiprod/de/refdata/mm10/kg.ensembl.retro.fnRDB.igvsort2.gtf -l /seq/epiprod/de/refdata/mm10/igvsortindex_logs
- (customized VCF) Get a custom vcf, sort it and index it for IGV view
  E.g., /seq/epiprod/de/refdata/dbSNP/C57.CAST.vcf
  (I first tried igvtools sort and index and got an error cause of lines w/o alt field so I run)
  python filter_out_lines_VCF_noALT.py  (script in /seq/epiprod/de/refdata/dbSNP/)
  Then sort it and index it:
  ~/bin/IGVTools/igvtools sort /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.vcf /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf
  ~/bin/IGVTools/igvtools index /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf
- (customized VCF) Get a custom vcf, transform it to bed (automatically sorted for bedops) for later use with bedops:bedmap
  python vcf2bed_wrapper.py -i /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf -o /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf.bed -l /seq/epiprod/de/refdata/dbSNP/vcf2bed_wrapper_logs
- (phased bam files) Transform phased bam files to bed files (bamfiles are sorted by read id so we need to sort the bed)
  phased bam to two beds, paternal and maternal, sort them, and erase the unsorted ones
  python phasedBam2bed_wrapper.py -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv -i /broad/hptmp/de/data/FF1i1_ad -o /broad/hptmp/de/data/FF1i1_ad/bam2bed --header_name_of_exp_id name -e .phased.merged.bam -l /broad/hptmp/de/data/FF1i1_ad/bam2bed_logs -s -x
  python sortBed_wrapper.py -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv -i /broad/hptmp/de/data/FF1i1_ad/bam2bed --header_name_of_exp_id='name' -e .m.bed -l /broad/hptmp/de/data/FF1i1_ad/bam2bed/sortBed_logs -j .m -x
  python sortBed_wrapper.py -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv -i /broad/hptmp/de/data/FF1i1_ad/bam2bed --header_name_of_exp_id='name' -e .p.bed -l /broad/hptmp/de/data/FF1i1_ad/bam2bed/sortBed_logs -j .p -x
- Get the AVG reads per SNP
  Here different averages could be taken.
  Case I.   single replicate.
  Map-count the maternal reads (sorted bed) to the VCF file using bedops
  python bedmap_wrapper.py -r /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf.bed -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv --header_name_of_exp_id name -i /broad/hptmp/de/data/FF1i1_ad/bam2bed -e .m.sorted.bed --bedmap_options='--faster --count --echo' -o /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap -l /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap_logs
  Map-count the paternal reads (sorted bed) to the VCF file using bedops
  python bedmap_wrapper.py -r /seq/epiprod/de/refdata/dbSNP/C57.CAST.filternoALT.igvsort.vcf.bed -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv --header_name_of_exp_id name -i /broad/hptmp/de/data/FF1i1_ad/bam2bed -e .p.sorted.bed --bedmap_options='--faster --count --echo' -o /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap -l /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap_logs
  Count the Average Number of reads per SNP in maternal file
  python avg_count_per_factor.py -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv --header_name_of_exp_id name --header_names_of_factors age -i /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap -p m -e .sorted_mapped2_C57.CAST.filternoALT.igvsort.vcf.bedmap -o /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap/avg_counts 
  Count the Average Number of reads per SNP in paternal file
  python avg_count_per_factor.py -d /seq/epiprod/de/data/doe/tmp_and_rescue/doe_cerebellum_single_phasedBam.csv --header_name_of_exp_id name --header_names_of_factors age -i /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap -p p -e .sorted_mapped2_C57.CAST.filternoALT.igvsort.vcf.bedmap -o /broad/hptmp/de/data/FF1i1_ad/bam2bed/bedmap/avg_counts
  Merge Paternal and Maternal counts into a single paternal/maternal bed file (paternal +, maternal -)
  python merge_pat_mat_avg_counts.py 
  Case II.  cross, age
  Case III. age
